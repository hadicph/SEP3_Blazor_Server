@page "/Users"
@using SEP3_Blazor_App.Models
@using SEP3_Blazor_App.Data.Services.User

@inject IUserService UserService
@attribute [Authorize(policy:"admin")]

<h2>List of Users</h2>

<div class="row">
    <div class="col">
        <p>
            <a href="/add/add-patient" style="text-underline-position:below; cursor:pointer; color:blue;font-weight:bold" class="btn btn-sm btn-default">Add User</a>
        </p>
        <br/>
        <div class="col-12 row" style="text-align:left; font-weight:bold">
            <span class="col-12">@AddMessage</span>
        </div>
        <table class="table table-responsive tabletable-striped">
            <thead class="thead-light">
            <tr>
                <th scope="col">CPR Nb</th>
                <th scope="col">Password</th>
                <th scope="col">Role</th>
            </tr>
            </thead>
            <tbody>
            @if (userList == null)
            {
                <text>Loading...</text>
            }
            else if (userList.Count == 0)
            {
                <text>No records found.</text>
            }
            else
            {
                @foreach (var user in userList)
                {
                    <tr>
                        <td>
                            <NavLink href=@string.Format("/admin/edit-user/{0}", @user.UserId)>
                                @user.UserId
                            </NavLink>
                        </td>
                        <td>@user.Password</td>
                        <td>@user.Role</td>
                        <td>
                            <a href='/add/edit-user/@user.UserId' style="text-underline-position:below; cursor:pointer; color:blue;font-weight:bold">Edit</a> |
                            <a style="text-underline-position:below; cursor:pointer; color:blue;font-weight:bold"
                               @onclick="(() => DeleteUser(user.UserId))">
                                Delete
                            </a>
                        </td>
                    </tr>
                }
            }

            </tbody>
        </table>
    </div>
</div>


@code {
    private User user;
    private List<User> userList = new List<User>();
    public string AddMessage { get; set; }

    protected override async Task OnInitializedAsync()
    {
        user = new User();
        try
        {
            userList = await UserService.GetAllUsers();
        }
        catch (Exception ex)
        {
            AddMessage = ex.Message;
        }

        await base.OnInitializedAsync();
    }

    private async Task ReloadUser()
    {
        userList = await UserService.GetAllUsers();
    }

    private async Task DeleteUser(string userid)
    {
        bool response = await UserService.DeleteUser(userid);
        ;

        if (response)
        {
            await ReloadUser();
        }
    }

}